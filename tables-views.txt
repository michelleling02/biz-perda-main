create table public.analyticsevents (
  event_id bigint generated by default as identity not null,
  user_id text null,
  event_name character varying(100) not null,
  properties jsonb null,
  created_at timestamp with time zone null default now(),
  constraint analyticsevents_pkey primary key (event_id),
  constraint analyticsevents_user_id_fkey foreign KEY (user_id) references profiles (id) on delete set null
) TABLESPACE pg_default;

create table public.categories (
  category_id bigint generated by default as identity not null,
  name character varying not null,
  constraint categories_pkey primary key (category_id),
  constraint categories_tag_id_key unique (category_id),
  constraint categories_tag_name_key unique (name)
) TABLESPACE pg_default;

create table public.menuitems (
  menu_item_id bigint generated by default as identity not null,
  shop_id bigint not null,
  name character varying(255) not null,
  description text null,
  price numeric(10, 2) not null,
  category character varying(100) null,
  photo_url character varying(255) null,
  is_available boolean not null default true,
  constraint menuitems_pkey primary key (menu_item_id)
) TABLESPACE pg_default;

create table public.moderationhistory (
  history_id bigint generated by default as identity not null,
  shop_id bigint not null,
  moderator_user_id text not null,
  previous_status character varying(50) null,
  new_status character varying(50) not null,
  reason text null,
  created_at timestamp with time zone null default now(),
  constraint moderationhistory_pkey primary key (history_id),
  constraint moderationhistory_moderator_user_id_fkey foreign KEY (moderator_user_id) references profiles (id) on delete set null,
  constraint moderationhistory_shop_id_fkey foreign KEY (shop_id) references shops (shop_id) on update CASCADE on delete CASCADE
) TABLESPACE pg_default;

create table public.notifications (
  notification_id bigint generated by default as identity not null,
  recipient_user_id text not null,
  title character varying(255) not null,
  message text null,
  is_read boolean not null default false,
  created_at timestamp with time zone null default now(),
  constraint notifications_pkey primary key (notification_id),
  constraint notifications_recipient_user_id_fkey foreign KEY (recipient_user_id) references profiles (id) on delete set null
) TABLESPACE pg_default;

create table public.profiles (
  id text not null,
  name text not null,
  phone_number text null,
  profile_photo_url text null,
  is_active boolean null default true,
  created_at timestamp with time zone not null default now(),
  status public.user_status not null default 'Active'::user_status,
  constraint profiles_pkey primary key (id)
) TABLESPACE pg_default;

create view public.public_shops_with_photos as
select
  shop_id,
  owner_user_id,
  name,
  description,
  address,
  location,
  phone_number,
  operating_hours,
  created_at,
  updated_at,
  status,
  name_desc_fts,
  (
    select
      p.photo_url
    from
      shopphotos p
    where
      p.shop_id = s.shop_id
      and p.type = 'Main'::photo_category
    limit
      1
  ) as main_photo_url
from
  shops s
where
  status = 'Approved'::status;

create table public.reviews (
  review_id bigint generated by default as identity not null,
  shop_id bigint not null,
  user_id text not null,
  rating integer not null,
  comment text null,
  created_at timestamp with time zone null default now(),
  constraint reviews_pkey primary key (review_id),
  constraint reviews_shop_id_fkey foreign KEY (shop_id) references shops (shop_id) on update CASCADE on delete CASCADE,
  constraint reviews_user_id_fkey foreign KEY (user_id) references profiles (id) on delete CASCADE,
  constraint reviews_rating_check check (
    (
      (rating >= 1)
      and (rating <= 5)
    )
  )
) TABLESPACE pg_default;

create table public.roles (
  role_id bigint generated by default as identity not null,
  role_name character varying not null,
  constraint roles_pkey primary key (role_id),
  constraint roles_role_id_key unique (role_id),
  constraint roles_role_name_key unique (role_name)
) TABLESPACE pg_default;

create view public.shop_performance_stats as
select
  s.shop_id,
  s.name,
  s.owner_user_id,
  count(distinct v.user_id) as total_views,
  count(distinct f.user_id) as total_favourites,
  avg(r.rating) as average_rating
from
  shops s
  left join shopviews v on s.shop_id = v.shop_id
  left join shopfavourites f on s.shop_id = f.shop_id
  left join reviews r on s.shop_id = r.shop_id
group by
  s.shop_id,
  s.name,
  s.owner_user_id;

create table public.shopannouncements (
  announcement_id bigint generated by default as identity not null,
  shop_id bigint not null,
  title character varying(255) not null,
  content text null,
  photo_url character varying(255) null,
  expires_at timestamp with time zone null,
  created_at timestamp with time zone null default now(),
  constraint shopannouncements_pkey primary key (announcement_id)
) TABLESPACE pg_default;

create table public.shopcategorylink (
  shop_id bigint not null,
  category_id bigint not null,
  constraint shopcategorylink_pkey primary key (shop_id, category_id),
  constraint shopcategorylink_category_id_fkey foreign KEY (category_id) references categories (category_id) on update CASCADE on delete CASCADE
) TABLESPACE pg_default;

create table public.shopclaims (
  claim_id bigint generated by default as identity not null,
  shop_id bigint not null,
  requesting_user_id text not null,
  status character varying(50) not null default 'Pending'::character varying,
  proof_document_url character varying(255) null,
  moderator_user_id text null,
  created_at timestamp with time zone null default now(),
  resolved_at timestamp with time zone null,
  constraint shopclaims_pkey primary key (claim_id),
  constraint shopclaims_moderator_user_id_fkey foreign KEY (moderator_user_id) references profiles (id) on delete set null,
  constraint shopclaims_requesting_user_id_fkey foreign KEY (requesting_user_id) references profiles (id) on delete CASCADE,
  constraint shopclaims_shop_id_fkey foreign KEY (shop_id) references shops (shop_id) on update CASCADE on delete CASCADE
) TABLESPACE pg_default;

create table public.shopfavourites (
  user_id text not null,
  shop_id bigint not null,
  created_at timestamp with time zone null default now(),
  constraint shopfavourites_pkey primary key (user_id, shop_id),
  constraint shopfavourites_shop_id_fkey foreign KEY (shop_id) references shops (shop_id) on update CASCADE on delete CASCADE,
  constraint shopfavourites_user_id_fkey foreign KEY (user_id) references profiles (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.shopmilestones (
  id bigint generated by default as identity not null,
  shop_id bigint not null,
  milestone_type text not null,
  milestone_value integer not null,
  achieved_at timestamp with time zone null default now(),
  constraint shopmilestones_pkey primary key (id),
  constraint shopmilestones_shop_id_milestone_type_milestone_value_key unique (shop_id, milestone_type, milestone_value),
  constraint shopmilestones_shop_id_fkey foreign KEY (shop_id) references shops (shop_id) on delete CASCADE
) TABLESPACE pg_default;

create table public.shopphotos (
  photo_id bigint generated by default as identity not null,
  shop_id bigint not null,
  uploader_user_id text null,
  photo_url character varying(255) not null,
  description character varying(255) null,
  is_primary boolean not null default false,
  status character varying(50) not null default 'Approved'::character varying,
  uploaded_at timestamp with time zone null default now(),
  type public.photo_category null,
  constraint shopphotos_pkey primary key (photo_id),
  constraint shopphotos_shop_id_fkey foreign KEY (shop_id) references shops (shop_id) on update CASCADE on delete CASCADE,
  constraint shopphotos_uploader_user_id_fkey foreign KEY (uploader_user_id) references profiles (id) on delete set null
) TABLESPACE pg_default;

create table public.shops (
  shop_id bigint generated by default as identity not null,
  owner_user_id text null,
  name character varying not null,
  description text null,
  address text null,
  location geography not null,
  phone_number text null,
  operating_hours character varying null,
  created_at timestamp without time zone null default now(),
  updated_at timestamp without time zone null,
  status public.status not null default 'Pending'::status,
  name_desc_fts tsvector null,
  constraint shops_pkey primary key (shop_id),
  constraint shops_shop_id_key unique (shop_id),
  constraint shops_owner_user_id_fkey foreign KEY (owner_user_id) references profiles (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists shops_name_desc_fts_idx on public.shops using gin (name_desc_fts) TABLESPACE pg_default;

create trigger shops_fts_update BEFORE INSERT
or
update on shops for EACH row
execute FUNCTION update_shops_fts ();

create table public.shoptaglink (
  shop_id bigint not null,
  tag_id bigint not null,
  constraint shoptaglink_pkey primary key (shop_id, tag_id),
  constraint shoptaglink_shop_id_fkey foreign KEY (shop_id) references shops (shop_id) on update CASCADE on delete CASCADE,
  constraint shoptaglink_tag_id_fkey foreign KEY (tag_id) references tags (tag_id) on update CASCADE on delete CASCADE
) TABLESPACE pg_default;

create table public.shopviews (
  view_id bigint generated by default as identity not null,
  shop_id bigint not null,
  user_id text null,
  viewed_at timestamp with time zone null default now(),
  constraint shopviews_pkey primary key (view_id),
  constraint shopviews_shop_id_fkey foreign KEY (shop_id) references shops (shop_id) on update CASCADE on delete CASCADE,
  constraint shopviews_user_id_fkey foreign KEY (user_id) references profiles (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.systemtoggles (
  toggle_key character varying(100) not null,
  is_active boolean not null default false,
  description text null,
  updated_at timestamp with time zone null,
  constraint systemtoggles_pkey primary key (toggle_key)
) TABLESPACE pg_default;

create table public.tags (
  tag_id bigint generated by default as identity not null,
  tag_name character varying not null,
  constraint tags_pkey primary key (tag_id),
  constraint tags_tag_id_key unique (tag_id),
  constraint tags_tag_name_key unique (tag_name)
) TABLESPACE pg_default;

create table public.userbanhistory (
  ban_id bigint generated by default as identity not null,
  user_id text not null,
  moderator_user_id text not null,
  action_type character varying(50) not null,
  reason text null,
  expires_at timestamp with time zone null,
  created_at timestamp with time zone null default now(),
  constraint userbanhistory_pkey primary key (ban_id),
  constraint userbanhistory_moderator_user_id_fkey foreign KEY (moderator_user_id) references profiles (id) on delete set null,
  constraint userbanhistory_user_id_fkey foreign KEY (user_id) references profiles (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.userroles (
  user_id text not null,
  role_id bigint not null,
  constraint userroles_pkey primary key (user_id, role_id),
  constraint userroles_role_id_fkey foreign KEY (role_id) references roles (role_id) on update CASCADE on delete CASCADE,
  constraint userroles_user_id_fkey foreign KEY (user_id) references profiles (id) on delete CASCADE
) TABLESPACE pg_default;